@{
    Layout = "_BudgetLayout";
}

@{
    TagAModel tagAModel = ViewBag.TagAModel;
    Mode mode = tagAModel.Mode;

    TagAModel tagAModelForm = tagAModel;
    string[] elements = tagAModel.HrefAfterUserId.Split('/');
    tagAModelForm.HrefAfterUserId = $"{string.Join('/', elements.Take(elements.Length - 1))}/{mode.ToStringAndLower()}";


    bool isEdit = mode == Mode.Edit || mode == Mode.Add;
    string color = ModeHelper.GetBootstrapColorByMode(mode);

    string pathToEdit = ViewBag.PathToEdit;

    TagAModel tagAModelEdit = tagAModel;
    tagAModelEdit.Mode = Mode.Edit;
    tagAModelEdit.HrefAfterUserId = $"{tagAModel.HrefAfterUserId}/{tagAModelEdit.Mode.ToStringAndLower()}";

    TagAModel tagAModelDelete = tagAModel;
    tagAModelDelete.Mode = Mode.Delete;
    tagAModelDelete.HrefAfterUserId = $"{tagAModel.HrefAfterUserId}/{tagAModelDelete.Mode.ToStringAndLower()}";
}

@section UnderBody {
    <h3 class="text-@color">@mode</h3>
    <br />
    @if (mode != Mode.Add)
    {
        @if (mode != Mode.Edit)
        {
            <a model="tagAModelEdit"></a>
        }
        <a model="tagAModelDelete"></a>
    }
}

<form-validation form-model="@tagAModelForm">
    <div asp-validation-summary="ModelOnly" class="text-danger" style="font-style: oblique;"></div>
    @RenderBody()
</form-validation>

<br />
@RenderSection("BelowForm", required: false)


@section Link {
    @RenderSection("Link", required: false)
}
